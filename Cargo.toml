[package]
name = "replicache-client"
version = "0.32.3"
authors = ["Rocicorp <replicache@roci.dev>"]
edition = "2018"

[features]
default = ["console_error_panic_hook"]
benchmark = []

[dependencies]
async-fn = { path = "crates/async-fn" }
async-recursion = "0.3.1"
async-std = { version = "=1.6.0", features = ["unstable"] }
async-trait = "0.1.36"
console_log = { version = "0.2" }
console_error_panic_hook = { version = "0.1.1", optional = true }
crc = "1.8.1"
data-encoding = "2.3.0"
flatbuffers = "0.6.1"
futures = "0.3.5"
http = "0.2.1"
js-sys = "0.3.40"
lazy_static = "1.4.0"
log = "0.4"
maplit = "1.0.2"
sha2 = "0.8.1"
serde = "1.0.116"
serde_json = "1.0"
serde-wasm-bindgen = "0.3.0"
str-macro = "0.1.4"
wasm-bindgen = { version = "0.2" }
wasm-bindgen-futures = "0.4.13"

[target.'cfg(not(target_env = "wasm"))'.dependencies]
rand = "0.7.3"

[dev-dependencies]
async-std = { version = "=1.6.0", features = ["attributes", "unstable"] }
itertools = "0.9.0"
rand = { version = "0.7.3", features = ["wasm-bindgen"] }
regex = "1"
serde_json = "1.0"
wasm-bindgen-test = "0.3.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-native-tls = "0.3.3"
bytes = "0.5.6"
env_logger = "0.7.1"
futures-io = { version = "0.3.1" }
hyper = { version = "0.13", default-features = false } # Implies tokio.
tokio = { version = "0.2", features = ["io-util"] } # For hyper.

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tide = "0.12.0"

[dependencies.web-sys]
version = "0.3.40"
features = [
    "console",
    "Crypto",
    "DomException",
    "Headers",
    "IdbDatabase",
    "IdbFactory",
    "IdbObjectStore",
    "IdbOpenDbRequest",
    "IdbTransaction",
    "IdbTransactionMode",
    "IdbVersionChangeEvent",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
]

[lib]
crate-type = ["staticlib", "cdylib", "rlib"]

[profile.release]
codegen-units = 1
lto = true
# Optimize for speeeeed.
# See https://github.com/rocicorp/repc/pull/198 for details as of time written.
opt-level = 3
panic = "abort"

# It would be nice to use wasm-opt, but there are no prebuilt binaries for m1:
# https://github.com/rustwasm/wasm-pack/issues/913
# So we just run it separately in ./tool/release.sh.
# Developers must manually build/install wasm-opt, which can be done on macs with Homebrew.
[package.metadata.wasm-pack.profile.release]
wasm-opt = false
[package.metadata.wasm-pack.profile.profiling]
wasm-opt = false
