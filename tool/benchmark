#!/bin/sh

# Script to run WebAssembly benchmark tests within a browser.

PREFIX=benches

for i in "$@"; do
    case $i in
    -h|--help)
        echo "`basename -- $0` [--help] [<test prefix>]"
        exit 0
        ;;
    *)
        PREFIX=$1
        ;;
esac
done

SYSTEM=`uname -s`

if [ $SYSTEM = 'Darwin' ]; then
    HW=`system_profiler SPHardwareDataType`
    STORAGE=`system_profiler SPStorageDataType`
    CPU=`echo "$HW" | grep Processor\ Name: | cut -d:  -f2-`
    SPEED=`echo "$HW" | grep Speed: | cut -d: -f2-`
    MEM=`echo "$HW" | grep Memory: | cut -d: -f2-`
    DISK_TYPE=`echo "$STORAGE" | grep Medium\ Type: | head -1 | cut -d: -f2-`
    DISK_SIZE=`echo "$STORAGE" | grep Capacity: | head -1 | cut -d: -f2- | cut -d\  -f2-3`

    echo "Hardware:$CPU$SPEED,$MEM RAM, $DISK_SIZE$DISK_TYPE"
elif [ $SYSTEM = 'Linux' ]; then
    LSCPU=`lscpu`
    CPU=`echo "$LSCPU" | grep Model\ name: | cut -d\  -f3- | sed -e 's/^[[:space:]]*//'`
    CORES=`echo "$LSCPU" | grep CPU\(s\): | cut -d\  -f2- | sed -e 's/^[[:space:]]*//'`
    echo "Hardware: $CPU ($CORES cores)"
fi

export WASM_BINDGEN_TEST_TIMEOUT=120  # Raise as more benchmarks are added.

wasm-pack test --release --chrome --headless -- --lib $PREFIX \
    --features benchmark \
    | grep "ns/iter" \
    | python3 -c '
import sys

lines = sys.stdin.readlines()
lines.reverse()  # Restore tests to the order their functions appear in.

# Figure out the maximum width of each column.
cols = {}
for l in lines:
    for i, word in enumerate(l.split()):
        cols[i] = max(len(word), cols.get(i, 0))

# Make non-unit columns have an extra width for readability.
for i in range(0, len(cols), 2):
    cols[i] += 1

# Assemble format string, and format each line with it.
format = "%%-%ds" % (cols[0] + 1)
format += " ".join("%%%ds" % i for i in list(cols.values())[1:])
for l in lines:
    words = l.split()
    words += [""] * (len(cols) - len(words))
    print(format % tuple(words))'
