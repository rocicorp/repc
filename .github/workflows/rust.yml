name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo fmt -- --check

  warnings:
    name: Warnings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo rustc -- -D warnings
      - run: cargo clippy --version
      - run: cargo clippy -- -D warnings

  tests:
    name: Cargo Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo test --verbose

  wasmtest:
    name: Wasm Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: wasm-pack test --chrome --headless

  wasmsize:
    name: Wasm Size
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: sudo apt-get install brotli
      - run: ./tool/release.sh
      - run: ./tool/release.sh --report > wasm-size.txt
      - uses: actions/upload-artifact@v2
        with:
          name: wasm-size.txt
          path: wasm-size.txt

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: cargo install wasm-pack
      - name: Build
        run: bash ./tool/release.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: repc.zip
